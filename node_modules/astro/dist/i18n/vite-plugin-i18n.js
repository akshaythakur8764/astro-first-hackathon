import { AstroError } from "../core/errors/errors.js";
import { AstroErrorData } from "../core/errors/index.js";
const virtualModuleId = "astro:i18n";
const configId = "astro-internal:i18n-config";
const resolvedConfigId = `\0${configId}`;
function astroInternationalization({
  settings
}) {
  const {
    base,
    build: { format },
    i18n,
    site,
    trailingSlash
  } = settings.config;
  return {
    name: "astro:i18n",
    enforce: "pre",
    async resolveId(id) {
      if (id === virtualModuleId) {
        if (i18n === void 0)
          throw new AstroError(AstroErrorData.i18nNotEnabled);
        return this.resolve("astro/virtual-modules/i18n.js");
      }
      if (id === configId)
        return resolvedConfigId;
    },
    load(id) {
      if (id === resolvedConfigId) {
        const { defaultLocale, locales, routing, fallback } = i18n;
        const config = {
          base,
          format,
          site,
          trailingSlash,
          defaultLocale,
          locales,
          routing,
          fallback
        };
        return `export default ${JSON.stringify(config)};`;
      }
    }
  };
}
export {
  astroInternationalization as default
};
